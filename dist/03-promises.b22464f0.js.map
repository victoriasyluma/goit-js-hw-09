{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAE/BC,iBAAiB,UAAUC,MAAOC,IACrCA,EAAMC,iBAEN,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SAEvCC,EAAeC,OAAON,EAAMO,OAC5BC,EAAeF,OAAOL,EAAKM,OAC3BE,EAAgBH,OAAOJ,EAAOK,OAEpC,IAAIG,EAAaL,EAEjB,MAAMM,EAAiB,EAACC,SAAEA,EAAQZ,MAAEA,KAwBtC,SAAuBY,EAAUZ,GAC/B,MAAMa,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAS,C,SAAER,E,MAAUZ,GAEvBa,EACFI,EAAQG,GAKVF,EAAOE,EAAA,GACNpB,EAAA,GAEP,CAvCWqB,CAAcT,EAAUZ,GAC5BsB,MAAK,KACJC,EAAA/B,GAASgC,OAAOC,QACd,uBAAuBb,QAAeF,MAAc,IAGvDgB,OAAM,KACLH,EAAA/B,GAASgC,OAAOG,QACd,sBAAsBf,QAAeF,MAAc,IAGtDkB,SAAQ,KACPlB,GAA0BF,CAAA,UAI1BG,EAAe,CAAEC,SAAU,EAAGZ,MAAOK,IAE3C,IAAK,IAAIO,EAAW,EAAGA,GAAYH,EAAeG,UAC1CD,EAAe,C,SAAEC,EAAUZ,MAAOQ,GAAa","sources":["src/js/03-promises.js"],"sourcesContent":["import notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', async (event) => {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.target.elements;\n\n  const firstDelayMs = Number(delay.value);\n  const stepsDelayMs = Number(step.value);\n  const amountOfSteps = Number(amount.value);\n\n  let totalDelay = firstDelayMs;\n\n  const executePromise = ({ position, delay }) => {\n    return createPromise(position, delay)\n      .then(() => {\n        notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${totalDelay}ms`\n        );\n      })\n      .catch(() => {\n        notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${totalDelay}ms`\n        );\n      })\n      .finally(() => {\n        totalDelay = totalDelay + stepsDelayMs;\n      });\n  };\n\n  await executePromise({ position: 1, delay: firstDelayMs });\n\n  for (let position = 2; position <= amountOfSteps; position++) {\n    await executePromise({ position, delay: stepsDelayMs });\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const result = { position, delay };\n\n      if (shouldResolve) {\n        resolve(result);\n\n        return;\n      }\n\n      reject(result);\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","async","event","preventDefault","delay","step","amount","target","elements","firstDelayMs","Number","value","stepsDelayMs","amountOfSteps","totalDelay","executePromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","result","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure","finally"],"version":3,"file":"03-promises.b22464f0.js.map"}